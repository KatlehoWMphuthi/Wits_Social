plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'jacoco'

}

jacoco {
    toolVersion = '0.8.7'
}

android {
    buildFeatures {
        viewBinding true
    }

    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.witssocial"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            testCoverageEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        animationsDisabled true

        unitTests {
            includeAndroidResources = true
        }
    }


}



dependencies {

    def fragment_version = "1.4.1"

    //Shimmer effect
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    //picasso Image loader
    implementation 'com.squareup.picasso:picasso:2.8'

    // Java language implementation
    implementation "androidx.fragment:fragment:$fragment_version"

    implementation 'androidx.appcompat:appcompat:1.4.1'
//    material  design
    implementation 'com.google.android.material:material:1.5.0'
//    auto imported
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.google.truth:truth:1.1.3'
   // androidTestImplementation 'org.hamcrest:hamcrest:2.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "androidx.activity:activity-ktx:1.6.0-alpha01"
    implementation platform('com.google.firebase:firebase-bom:29.2.1')
    implementation 'com.google.firebase:firebase-analytics'
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"

//    Firebase
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'com.google.firebase:firebase-auth:19.2.0'
    implementation 'com.google.firebase:firebase-database:20.0.0'
    implementation 'com.google.firebase:firebase-messaging:22.0.0'
    implementation 'com.google.firebase:firebase-functions:20.0.0'
    implementation 'com.google.firebase:firebase-storage:11.8.0'

//   KODDev Dependencies
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.github.CanHub:Android-Image-Cropper:3.3.5'
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'com.github.shts:StoriesProgressView:3.0.0'
    implementation 'com.github.pwittchen:swipe-rx2:0.3.0'
    

    // dependency for listing recycle view
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha06'



    //adding circle image view
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //for testing
    testImplementation 'org.mockito:mockito-inline:2.27.0'
    testImplementation 'org.robolectric:robolectric:4.8'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'androidx.test:rules:1.4.0'
    //For UI tests
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'


}

task jacocoTestReport(type: JacocoReport,
        dependsOn: ['testDebugUnitTest','connectedAndroidTest']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."

    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }

    def fileFilter = ['androidx/**/*.*',
                      '**/view/*.*',
                      '**/data/*.*',
                      '**/data/model/*.*',
                      '**/generated/callback/*.*',
                      '**/lambda$*.class',
                      '**/lambda.class',
                      '**/*lambda.class',
                      '**/*lambda*.class']

    def debugTree = fileTree(dir:
            "${buildDir}/intermediates/javac/debug/classes",
            excludes: fileFilter
    )

    def mainSrc = "/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))

    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "${buildDir}", includes:[
            "/jacoco/testDebugUnitTest.exec",
            "outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec",
            "outputs/code-coverage/debugAndroidTest/connected/*coverage.ec"]))
}
